#!/usr/bin/env bash
set -eo pipefail; [[ -n "$PLUSHU_TRACE" ]] && set -x

if [[ -n "$PLUSHU_APP_NAME" ]]; then
  app=$PLUSHU_APP_NAME
elif [[ -n "$2" ]]; then
  app=$2
  shift
else
  echo "Missing app name" >&2
  exit 1
fi

app_dir=$PLUSHU_ROOT/apps/$app

# Check if app exists
if [[ ! -d "$app_dir" ]]; then
  echo "App not found: $app" >&2
  exit 1
fi

env_file=$app_dir/config.env

if [[ ! -f "$env_file" ]]; then
  touch "$env_file"
fi

if [[ -z "$2" ]]; then
  echo "No key=value pairs specified" >&2
  exit 1
else
  # Let all arguments from 2 on be key=value pairs to set
  pairs="${@:2}"
fi

# Parameter validation
for pair in "${pairs[@]}"; do
  if [[ "$pair" != *"="* ]]; then
    echo "Not a key=value pair: $pair" >&2
    exit 1
  else
    key=${pair%%=*}
    value=${pair#*=}

    if [[ "$key" != [a-zA-Z_][a-zA-Z0-9_]* ]]; then
      echo "Not a valid key: $key" >&2
      exit 1
    fi
  fi
done

# Add definitions to configuration
for pair in "${pairs[@]}"; do
  key=${pair%%=*}
  value=${pair#*=}

  # Delete any existing definition for this key
  sed -i "/^$key=/ d" "$env_file"

  # We set every pair specified, even if the value is empty.
  # This can be used to set an *explicit clear* on a variable.
  # To properly *remove* a set pair (allowing it to be specified
  # by an assignment somewhere before the config is executed),
  # use the "unset" subcommand.
  printf "$key=%q\n" "$value" >>"$env_file"
done

# Restart app with new configuration
"$PLUSHU_ROOT/lib/plushook" release-app "$app"
"$PLUSHU_ROOT/lib/plushook" deploy-app "$app"

